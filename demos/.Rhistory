group_split(cyl) %>%
map_df(head, n = 2)
library(purrr)
mtcars %>%
# creates a grouped data frame
group_split(cyl) %>%
map_df(head, n = 2)
mtcars %>%
# creates a grouped data frame
group_split(cyl) %>%
map_dfr(head, n = 2)
library(ggplot2)
mtcars
iris
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length))
ggplot(iris)
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length))
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) +
geom_point(aes(color = Species))
knitr::opts_chunk$set(echo = TRUE)
# This is a comment
this is a problem
# This is a comment
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
y <- 6
# This is a comment
y
nrow <- function() {
return(4)
}
View(nrow)
nrow()
library(dplyr)
under_30_ds <- read_csv("exp_data.csv")
library(dplyr)
under_30_ds <- read_csv("exp_data.csv")
library(tidyverse)
under_30_ds <- read_csv("exp_data.csv")
View(under_30_ds)
under_30_ds <- read_csv("exp_data-small.csv")
View(under_30_ds)
t.test(under_30_ds[a == "a"], under_30_ds[a == "b"])
under_30_ds <- read_csv("exp_data-small.csv")
t.test(under_30_ds[group == "a"], under_30_ds[group == "b"])
under_30_ds <- read_csv("exp_data-small.csv")
t.test(under_30_ds[[group == "a"]], under_30_ds[[group == "b"]])
under_30_ds %>%
t.test(value ~ group, .)
over_30_ds <- read_csv("exp_data-big.csv")
over_30_ds %>%t.test(value ~ group, .)
library(tidyverse)
library(tidyverse)
moving_permits <- read_csv(moving-permits.csv)
moving_permits <- read_csv("moving-permits.csv")
moving_permits <- read_csv("moving-permits.csv")
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(babynames)
babynames %>%
filter(name == "Ellis")
babynames %>%
filter(name == "Ellis") %>%
group_by(year)
babynames %>%
filter(name == "Ellis") %>%
group_by(year) %>%
summarize(N = n(),
ratio = sum(ifelse(sex == "F", n, 0)) /
sum(ifelse(sex == "M", n, 0)))
babynames %>%
filter(name == "Ellis") %>%
group_by(year) %>%
summarize(N = n(),
ratio = sum(ifelse(sex == "F", n, 0)) /
sum(ifelse(sex == "M", n, 0)),
howfaroff = abs(1 - ratio)) %>%
filter(N == 2)  %>% # Filter to years where there were M and F babies with name
arrange(howfaroff)
babynames %>%
group_by(year) %>%
summarize(num_births = sum(n)) %>%
arrange(desc(num_births))
babynames %>%
group_by(name) %>%
summarize(earliest = min(year), latest = max(year))
babynames %>%
group_by(name) %>%
summarize(num_appearances = n()) %>%
filter(num_appearances == 276)
babynames %>%
mutate(is_popular = prop >= 0.01) %>%
filter(is_popular == TRUE) %>%
group_by(name) %>%
summarize(earliest = min(year)) %>%
arrange(desc(earliest))
babynames %>%
filter(year >= 1990 & year < 2000) %>%
group_by(name) %>%
summarize(num_births = sum(n)) %>%
arrange(desc(num_births))
hiv["2018"] <- as.character(hiv["2018"])
library(Lahman)
install.packages("Lahman")
library(Lahman)
Lahman::Master
Lahman::People
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
students <- tibble(
ID = c("001", "002", "003", "004"),
FirstName = c("Ab", "Kaden", "Sarah", "Henri"),
LastName = c("Mosca", "Paulson-Smith", "Saydun", "Garrison-Desany"),
Class1 = c("CAIS117", "CAIS117", "MATH108", "CAIS117"),
Class2 = c("CAIS105", "CAIS105", "CAIS105", "CAIS105"),
Class3 = c("MATH108", "MATH108", "CAIS117", "CAIS220")
)
grades <- tibble(
Student = c("001", "002", "002",
"002", "006","004"),
Grade = c(85, 72, 89,
64, 99, 81),
Class = c("CAIS117", "CAIS117", "MATH108",
"CAIS105", "MATH330", "CAIS117")
)
time <- tibble(
Student = c("001", "001", "002", "002",
"003", "003", "004", "004",
"005", "005", "006", "006"),
Case = c("Homework", "ExtraCurriculars", "Homework", "ExtraCurriculars",
"Homework", "ExtraCurriculars", "Homework", "ExtraCurriculars",
"Homework", "ExtraCurriculars", "Homework", "ExtraCurriculars"),
Hours.Number = c(4, 6, 9, 2,
6, 3, 1, 7,
4, 2, 1, 10)
)
View(grades)
View(students)
View(time)
View(students)
View(grades)
View(time)
View(time)
View(students)
View(grades)
students %>%
inner_join(grades, by = c("ID" = "Student"))
students %>%
left_join(grades, by = c("ID" = "Student"))
students %>%
right_join(grades, by = c("ID" = "Student"))
View(time)
students %>%
right_join(time, by = c("ID" = "Student"))
students %>%
left_join(grades, by = c("ID" = "Student"))
students %>%
right_join(time, by = c("ID" = "Student"))
View(grades)
View(time)
View(students)
View(time)
View(students)
View(time)
View(grades)
time %>%
pivot_wider(names_from = "Case", values_from = "Hours.Number")
time %>%
pivot_wider("Case", "Hours.Number")
students %>%
pivot_longer(c("Class1", "Class2", "Class3"),
names_to = "Class Rank",
values_to = "Class Name")
pivoted <- students %>%
pivot_longer(c("Class1", "Class2", "Class3"),
names_to = "Class Rank",
values_to = "Class Name")
View(pivoted)
View(pivoted)
View(students)
View(grades)
library(babynames)
library(Lahman)
Lahman::Teams
library(tidyverse)
library(babynames)
most_populat_year <- function(name_arg) {
babynames %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
most_populat_year("Ab")
most_populat_year("Ellis")
most_popular_year <- function(name_arg) {
babynames %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
most_popular_year("Ab")
most_popular_year("Ellis")
most_popular_year("Scout")
most_popular_year <- function(name_arg) {
babynames %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
most_popular_year("Ab")
most_popular_year("Ellis")
most_popular_year("Scout")
most_popular_year <- function(ds = babynames, name_arg) {
ds %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
most_popular_year(name_arg = "Ab")
most_popular_year(name_arg = "Ellis")
most_popular_year(name_arg = "Scout")
babynames_M <- babynames %>%
filter(sex == "M")
View(babynames_M)
babynames_F <- babynames %>%
filter(sex == "F")
most_popular_year(ds = babynames_M, name_arg = "Ab")
most_popular_year(ds = babynames_F, name_arg = "Ab")
most_popular_year(ds = babynames_M, name_arg = "Ellis")
most_popular_year(ds = babynames_F, name_arg = "Ellis")
babynames_pre2000 <- babynames %>%
filter(year < 2000)
most_popular_year(ds = babynames_pre2000, name_arg = "Scout")
top10names <- function(ds = babynames) {
ds %>%
group_by(name) %>%
summarize(births = sum(n)) %>%
arrange(desc(births)) %>%
head(10)
}
top10names()
top10names(babynames_pre2000)
babynames %>%
filter(year >2000) %>%
top10names()
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(babynames)
babynames %>%
filter(name == "Logan")
babynames %>%
filter(name == "Logan") %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
most_popular_year <- function(name_arg) {
babynames %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
most_popular_year("Olivia")
most_popular_year("Regina")
most_popular_year("Rami")
most_popular_year("Mable")
formals(most_popular_year)
most_popular_year()
fiveMostCommon <- function(data, carrier_id) {
data %>%
filter(carrier == carrier_id) %>%
group_by(dest) %>%
summarize(frequency = nrow()) %>%
arrange(desc(frequency)) %>%
head(5)
}
fiveMostCommon(nycflights13, 'DL')
library(nycflights13)
fiveMostCommon(nycflights13::flights, 'DL')
fiveMostCommon <- function(data, carrier_id) {
data %>%
filter(carrier == carrier_id) %>%
group_by(dest) %>%
summarize(frequency = count()) %>%
arrange(desc(frequency)) %>%
head(5)
}
fiveMostCommon(nycflights13::flights, 'DL')
fiveMostCommon <- function(data, carrier_id) {
data %>%
filter(carrier == carrier_id) %>%
group_by(dest) %>%
summarize(frequency = count()) #%>%
# arrange(desc(frequency)) %>%
#  head(5)
}
fiveMostCommon(nycflights13::flights, 'DL')
fiveMostCommon <- function(data, carrier_id) {
data %>%
filter(carrier == carrier_id) %>%
group_by(dest) #%>%
#summarize(frequency = count()) %>%
# arrange(desc(frequency)) %>%
#  head(5)
}
fiveMostCommon(nycflights13::flights, 'DL')
fiveMostCommon <- function(data, carrier_id) {
data %>%
filter(carrier == carrier_id) %>%
group_by(dest) %>%
summarize(frequency = n()) %>%
arrange(desc(frequency)) %>%
head(5)
}
fiveMostCommon(nycflights13::flights, 'DL')
fiveMostCommon(nycflights13::flights, 'AA')
fiveMostCommon(nycflights13::flights, 'B6')
fiveMostCommon(nycflights13::flights, 'NK')
commonCarriers <- function(data, airport_code) {
data %>%
filter(dest == airport_code | origin == airport_code) %>%
group_by(carrier) %>%
summarize(frequency = n(), avg_delay = mean(arr_delay)) %>%
arrange(desc(frequency)) %>%
head(5)
}
commonCarriers(flights, "BDL")
commonCarriers(flights, "BOS")
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(babynames)
babynames %>%
filter(name == "Logan")
babynames %>%
filter(name == "Logan") %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
most_popular_year <- function(name_arg) {
babynames %>%
filter(name == name_arg) %>%
group_by(year) %>%
summarize(total = sum(prop)) %>%
arrange(desc(total)) %>%
head(1) %>%
select(year)
}
most_popular_year("Olivia")
most_popular_year("Regina")
most_popular_year("Rami")
most_popular_year("Mable")
formals(most_popular_year)
most_popular_year()
commonCarriers <- function(data, airport_code) {
data %>%
filter(dest == airport_code | origin == airport_code) %>%
group_by(carrier) %>%
summarize(avg_delay = mean(arr_delay)) %>%
arrange(desc(frequency)) %>%
head(5)
}
commonCarriers(flights, "BOS")
commonCarriers <- function(data, airport_code) {
data %>%
filter(dest == airport_code | origin == airport_code) %>%
group_by(carrier) %>%
summarize(avg_delay = mean(arr_delay)) %>%
#arrange(desc(frequency)) %>%
head(5)
}
commonCarriers(flights, "BOS")
commonCarriers <- function(data, airport_code) {
data %>%
filter(dest == airport_code | origin == airport_code) %>%
group_by(carrier) %>%
summarize(frequency = n(), avg_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(desc(frequency)) %>%
head(5)
}
commonCarriers(flights, "BOS")
library(tidyverse)
movies <- read_csv("movies.csv")
setwd("~/Documents/Documents/classes/spring/MATH108-S24/demos")
movies <- read_csv("movies.csv")
View(movies)
ggplot(movies, aes(x = content_rating)) +
geom_bar()
ggplot(movies, aes(x = content_rating)) +
geom_bar() +
theme_light()
ggplot(movies, aes(x = content_rating)) +
geom_bar(aes(fill="lightgreen")) +
theme_light()
ggplot(movies, aes(x = content_rating)) +
geom_bar(fill="lightgreen") +
theme_light()
ggplot(movies, aes(x = content_rating)) +
geom_bar(fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = content_rating, y = ..prop..)) +
geom_bar(fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = content_rating, y = ..prop.., group = 1)) +
geom_bar(fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = content_rating, y = ..prop.., group = 1)) +
geom_bar(fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20)) +
ylim(0, 100)
ggplot(movies, aes(x = content_rating, y = ..prop.., group = 1)) +
geom_bar(fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20)) +
ylim(0, 1)
ggplot(movies, aes(x = imbd_score)) +
geom_histogram()
ggplot(movies, aes(x = imdb_score)) +
geom_histogram()
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(color="lightgreen", fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(color="lightgreen", fill="green") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(color="green", fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(color="darkgreen", fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(color="darkgreen", fill="lightgreen") +
geom_density(alpha = 0.2, fill="lightgreen")
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(aes(y = ..density..), color="darkgreen", fill="white") +
geom_density(alpha = 0.2, fill="lightgreen")
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(aes(y = ..density..), color="darkgreen", fill="lightgreen") +
geom_density(alpha = 0.2, fill="lightgreen")
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(aes(y = ..density..), color="darkgreen", fill="white") +
geom_density(alpha = 0.2, fill="lightgreen")
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
#geom_histogram(aes(y = ..density..), color="darkgreen", fill="white") +
geom_density(alpha = 0.2, fill="lightgreen")
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(aes(y = ..density..), color="darkgreen", fill="white") +
geom_density(alpha = 0.2, fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
#geom_histogram(aes(y = ..density..), color="darkgreen", fill="white") +
geom_density(alpha = 0.2, fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
#geom_histogram(aes(y = ..density..), color="darkgreen", fill="white") +
geom_density(alpha = 0.2, fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(aes(y = ..density..)) +
geom_density(alpha = 0.2, fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
geom_histogram(aes(y = ..density..), color="white", fill="white") +
geom_density(alpha = 0.2, fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
ggplot(movies, aes(x = imdb_score)) +
#geom_histogram(aes(y = ..density..), color="white", fill="white") +
geom_density(alpha = 0.2, fill="lightgreen") +
theme_light() +
theme(text = element_text(size=20))
